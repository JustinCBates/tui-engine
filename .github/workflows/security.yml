name: Dependency Updates & Security

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4

  security-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          pip install pip-audit safety bandit

      - name: Run pip-audit
        run: pip-audit --format=json --output=pip-audit-report.json
        continue-on-error: true

      - name: Run safety check
        run: safety check --json --output=safety-report.json
        continue-on-error: true

      - name: Run bandit security check
        run: bandit -r src/ -f json -o bandit-report.json
        continue-on-error: true

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-reports
          path: |
            pip-audit-report.json
            safety-report.json
            bandit-report.json

      - name: Create security issue if vulnerabilities found
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Security vulnerabilities detected',
              body: 'Automated security scan detected vulnerabilities. Please review the security audit reports.',
              labels: ['security', 'bug']
            })

  update-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install pip-tools
        run: pip install pip-tools

      - name: Update dependencies
        run: |
          # Generate updated requirements
          pip-compile --upgrade pyproject.toml --output-file requirements-updated.txt

      - name: Check for dependency updates
        id: check-updates
        run: |
          if [ -f requirements-updated.txt ]; then
            if ! cmp -s requirements-updated.txt requirements.txt 2>/dev/null; then
              echo "updates=true" >> $GITHUB_OUTPUT
            else
              echo "updates=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "updates=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request for dependency updates
        if: steps.check-updates.outputs.updates == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: 'chore: automated dependency updates'
          body: |
            ## Automated Dependency Updates
            
            This PR contains automated dependency updates generated by GitHub Actions.
            
            ### Changes
            - Updated Python dependencies to their latest compatible versions
            
            ### Testing
            - [ ] All tests pass
            - [ ] Security audit passes
            - [ ] Manual testing completed
            
            Please review the changes and merge if everything looks good.
          branch: automated/dependency-updates
          delete-branch: true